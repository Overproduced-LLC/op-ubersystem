"""Scrapping and Lodging

Revision ID: d6df684a0501
Revises: db3b423e6107
Create Date: 2025-03-24 02:25:39.181308

"""


# revision identifiers, used by Alembic.
revision = 'd6df684a0501'
down_revision = 'db3b423e6107'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


try:
    is_sqlite = op.get_context().dialect.name == 'sqlite'
except Exception:
    is_sqlite = False

if is_sqlite:
    op.get_context().connection.execute('PRAGMA foreign_keys=ON;')
    utcnow_server_default = "(datetime('now', 'utc'))"
else:
    utcnow_server_default = "timezone('utc', current_timestamp)"

def sqlite_column_reflect_listener(inspector, table, column_info):
    """Adds parenthesis around SQLite datetime defaults for utcnow."""
    if column_info['default'] == "datetime('now', 'utc')":
        column_info['default'] = utcnow_server_default

sqlite_reflect_kwargs = {
    'listeners': [('column_reflect', sqlite_column_reflect_listener)]
}

# ===========================================================================
# HOWTO: Handle alter statements in SQLite
#
# def upgrade():
#     if is_sqlite:
#         with op.batch_alter_table('table_name', reflect_kwargs=sqlite_reflect_kwargs) as batch_op:
#             batch_op.alter_column('column_name', type_=sa.Unicode(), server_default='', nullable=False)
#     else:
#         op.alter_column('table_name', 'column_name', type_=sa.Unicode(), server_default='', nullable=False)
#
# ===========================================================================


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('guest_autograph')
    op.drop_table('assigned_panelist')
    op.drop_table('mits_panel_application')
    op.drop_table('mits_picture')
    op.drop_table('mits_document')
    op.drop_table('mits_game')
    op.drop_table('mits_times')
    op.drop_table('mits_applicant')
    op.drop_table('mits_team')
    op.drop_index('ix_attraction_notification_ident', table_name='attraction_notification')
    op.drop_table('attraction_notification')
    op.drop_index('ix_attraction_signup_checkin_time', table_name='attraction_signup')
    op.drop_table('attraction_signup')
    op.drop_index('ix_attraction_notification_reply_sid', table_name='attraction_notification_reply')
    op.drop_table('attraction_notification_reply')
    op.drop_index('ix_attraction_event_attraction_id', table_name='attraction_event')
    op.drop_table('attraction_event')
    op.drop_table('attraction_feature')
    op.drop_table('attraction')
    op.drop_table('guest_interview')
    op.drop_table('event_feedback')
    op.drop_table('attendee_tournament')
    op.drop_table('indie_game_image')
    op.drop_table('indie_game_code')
    op.drop_table('indie_game_review')
    op.drop_table('indie_judge')
    op.drop_table('indie_game')
    op.drop_table('indie_developer')
    op.drop_table('indie_studio')
    op.drop_table('art_show_piece')
    op.drop_table('art_show_payment')
    op.drop_table('art_show_bidder')
    op.drop_table('art_show_receipt')
    op.drop_table('art_show_agent_code')
    op.drop_table('art_show_application')
    op.drop_table('artist_marketplace_application')
    op.drop_table('guest_taxes')
    op.drop_table('guest_stage_plot')
    op.drop_table('guest_detailed_travel_plan')
    op.drop_table('guest_travel_plans')
    op.drop_table('guest_charity')
    op.drop_table('guest_merch')
    op.drop_table('guest_bio')
    op.drop_table('guest_hospitality')
    op.drop_table('guest_panel')
    op.drop_table('guest_info')
    op.drop_table('guest_group')
    op.drop_table('panel_applicant')
    op.drop_table('panel_application')
    op.drop_table('event')
    op.add_column('attendee', sa.Column('arrival_date', sa.Date(), nullable=True))
    op.add_column('attendee', sa.Column('departure_date', sa.Date(), nullable=True))
    op.add_column('attendee', sa.Column('roommate', sa.Unicode(), nullable=True))
    op.add_column('attendee', sa.Column('roommate_requests', sa.Unicode(), nullable=True))
    op.add_column('attendee', sa.Column('room_type', sa.Integer(), server_default='224685583', nullable=False))
    op.add_column('attendee', sa.Column('single_occupancy', sa.Boolean(), server_default='False', nullable=False))
    op.add_column('attendee', sa.Column('linens', sa.Boolean(), server_default='False', nullable=False))
    op.add_column('attendee', sa.Column('vaccination_proof_path', sa.Unicode(), server_default='', nullable=False))
    op.add_column('attendee', sa.Column('vaccination_proof_approved', sa.Boolean(), server_default='False', nullable=False))
    op.drop_column('attendee', 'notification_pref')
    op.drop_column('attendee', 'attractions_opt_out')
    op.drop_column('group', 'categories_text')
    op.drop_column('group', 'wares')
    op.drop_column('group', 'is_dealer')
    op.drop_column('group', 'categories')
    op.create_unique_constraint(op.f('uq_lottery_application_attendee_id'), 'lottery_application', ['attendee_id'])
    op.create_index(op.f('ix_receipt_item_fk_id'), 'receipt_item', ['fk_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_receipt_item_fk_id'), table_name='receipt_item')
    op.drop_constraint(op.f('uq_lottery_application_attendee_id'), 'lottery_application', type_='unique')
    op.add_column('group', sa.Column('categories', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False))
    op.add_column('group', sa.Column('is_dealer', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.add_column('group', sa.Column('wares', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False))
    op.add_column('group', sa.Column('categories_text', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False))
    op.add_column('attendee', sa.Column('attractions_opt_out', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.add_column('attendee', sa.Column('notification_pref', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False))
    op.drop_column('attendee', 'vaccination_proof_approved')
    op.drop_column('attendee', 'vaccination_proof_path')
    op.drop_column('attendee', 'linens')
    op.drop_column('attendee', 'single_occupancy')
    op.drop_column('attendee', 'room_type')
    op.drop_column('attendee', 'roommate_requests')
    op.drop_column('attendee', 'roommate')
    op.drop_column('attendee', 'departure_date')
    op.drop_column('attendee', 'arrival_date')
    op.create_table('attraction_feature',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('attraction_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('is_public', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('badge_num_required', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attraction_id'], ['attraction.id'], name='fk_attraction_feature_attraction_id_attraction'),
    sa.PrimaryKeyConstraint('id', name='pk_attraction_feature'),
    sa.UniqueConstraint('name', 'attraction_id', name='uq_attraction_feature_name'),
    sa.UniqueConstraint('slug', 'attraction_id', name='uq_attraction_feature_slug'),
    postgresql_ignore_search_path=False
    )
    op.create_table('guest_hospitality',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('guest_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('completed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['guest_id'], ['guest_group.id'], name='fk_guest_hospitality_guest_id_guest_group'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_hospitality'),
    sa.UniqueConstraint('guest_id', name='uq_guest_hospitality_guest_id')
    )
    op.create_table('art_show_agent_code',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('app_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('cancelled', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['art_show_application.id'], name='fk_art_show_agent_code_app_id_art_show_application'),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_art_show_agent_code_attendee_id_attendee', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='pk_art_show_agent_code'),
    sa.UniqueConstraint('attendee_id', name='uq_art_show_agent_code_attendee_id')
    )
    op.create_table('artist_marketplace_application',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('display_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('email_address', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('website', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('tax_number', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('seating_requests', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('accessibility_requests', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('terms_accepted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), server_default=sa.text('196944751'), autoincrement=False, nullable=False),
    sa.Column('registered', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('accepted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('admin_notes', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('overridden_price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_artist_marketplace_application_attendee_id_attendee'),
    sa.PrimaryKeyConstraint('id', name='pk_artist_marketplace_application')
    )
    op.create_table('guest_info',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('guest_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('poc_phone', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('performer_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('bringing_vehicle', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('vehicle_info', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('arrival_time', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['guest_id'], ['guest_group.id'], name='fk_guest_info_guest_id_guest_group'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_info'),
    sa.UniqueConstraint('guest_id', name='uq_guest_info_guest_id')
    )
    op.create_table('art_show_piece',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('app_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('piece_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('for_sale', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('type', sa.INTEGER(), server_default=sa.text('36230926'), autoincrement=False, nullable=False),
    sa.Column('gallery', sa.INTEGER(), server_default=sa.text('187837110'), autoincrement=False, nullable=False),
    sa.Column('media', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('print_run_num', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('print_run_total', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('opening_bid', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('quick_sale_price', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('no_quick_sale', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), server_default=sa.text('34456864'), autoincrement=False, nullable=False),
    sa.Column('receipt_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('winning_bid', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('voice_auctioned', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('winning_bidder_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['art_show_application.id'], name='fk_art_show_pieces_app_id_art_show_application', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['receipt_id'], ['art_show_receipt.id'], name='fk_art_show_piece_receipt_id_art_show_receipt', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['winning_bidder_id'], ['art_show_bidder.id'], name='fk_art_show_piece_winning_bidder_id_art_show_bidder', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='pk_art_show_pieces')
    )
    op.create_table('guest_panel',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('guest_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('wants_panel', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('length', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('desc', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('tech_needs', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('other_tech_needs', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['guest_id'], ['guest_group.id'], name='fk_guest_panel_guest_id_guest_group'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_panel'),
    sa.UniqueConstraint('guest_id', name='uq_guest_panel_guest_id')
    )
    op.create_table('indie_game_code',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('game_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('judge_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('unlimited_use', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('judge_notes', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['indie_game.id'], name='fk_indie_game_code_game_id_indie_game'),
    sa.ForeignKeyConstraint(['judge_id'], ['indie_judge.id'], name='fk_indie_game_code_judge_id_indie_judge'),
    sa.PrimaryKeyConstraint('id', name='pk_indie_game_code')
    )
    op.create_table('panel_application',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('event_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('poc_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('unavailable', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('affiliations', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('past_attendance', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('presentation', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('other_presentation', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('tech_needs', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('other_tech_needs', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('panelist_bringing', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('applied', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), server_default=sa.text('196944751'), autoincrement=False, nullable=False),
    sa.Column('comments', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('cost_desc', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('extra_info', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('has_cost', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('length_reason', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('length_text', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('livestream', sa.INTEGER(), server_default=sa.text('227291107'), autoincrement=False, nullable=False),
    sa.Column('need_tables', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('tables_desc', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('length', sa.INTEGER(), server_default=sa.text('212285177'), autoincrement=False, nullable=False),
    sa.Column('available', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('is_loud', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('tabletop', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('accepted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('confirmed', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('department', sa.INTEGER(), server_default=sa.text('39626696'), autoincrement=False, nullable=False),
    sa.Column('noise_level', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('track', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('rating', sa.INTEGER(), server_default=sa.text('54944008'), autoincrement=False, nullable=False),
    sa.Column('granular_rating', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('public_description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('record', sa.INTEGER(), server_default=sa.text('227291107'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name='fk_panel_application_event_id_event', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['poc_id'], ['attendee.id'], name='fk_panel_application_poc_id_attendee', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='pk_panel_application'),
    postgresql_ignore_search_path=False
    )
    op.create_table('guest_bio',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('guest_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('desc', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('website', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('facebook', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('twitter', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('other_social_media', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('pic_filename', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('pic_content_type', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('teaser_song_url', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('member_info', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('bandcamp', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('discord', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('instagram', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('twitch', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('spotify', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['guest_id'], ['guest_group.id'], name='fk_guest_bio_guest_id_guest_group'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_bio'),
    sa.UniqueConstraint('guest_id', name='uq_guest_bio_guest_id')
    )
    op.create_table('mits_picture',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('content_type', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('extension', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('game_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('is_header', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('is_thumbnail', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['mits_game.id'], name='fk_mits_picture_game_id_mits_game'),
    sa.PrimaryKeyConstraint('id', name='pk_mits_picture')
    )
    op.create_table('guest_merch',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('guest_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('selling_merch', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tax_phone', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('extra_info', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('inventory', sa.VARCHAR(), server_default=sa.text("'{}'::character varying"), autoincrement=False, nullable=False),
    sa.Column('handlers', sa.VARCHAR(), server_default=sa.text("'[]'::character varying"), autoincrement=False, nullable=False),
    sa.Column('poc_email', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('poc_first_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('poc_last_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('poc_phone', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('poc_zip_code', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('poc_address1', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('poc_address2', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('poc_city', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('poc_region', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('poc_country', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('poc_is_group_leader', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('inventory_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('delivery_method', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('payout_method', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('paypal_email', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('check_payable', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('check_zip_code', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('check_address1', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('check_address2', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('check_city', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('check_region', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('check_country', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('arrival_plans', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('merch_events', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['guest_id'], ['guest_group.id'], name='fk_guest_merch_guest_id_guest_group'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_merch'),
    sa.UniqueConstraint('guest_id', name='uq_guest_merch_guest_id')
    )
    op.create_table('indie_judge',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('admin_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('genres', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('staff_notes', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('platforms', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('platforms_text', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('no_game_submission', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), server_default=sa.text('150891957'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('vr_text', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admin_account.id'], name='fk_indie_judge_admin_id_admin_account'),
    sa.PrimaryKeyConstraint('id', name='pk_indie_judge'),
    postgresql_ignore_search_path=False
    )
    op.create_table('guest_group',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('group_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('event_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('payment', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('vehicles', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('estimated_loadin_minutes', sa.INTEGER(), server_default=sa.text('20'), autoincrement=False, nullable=False),
    sa.Column('estimated_performance_minutes', sa.INTEGER(), server_default=sa.text('40'), autoincrement=False, nullable=False),
    sa.Column('num_hotel_rooms', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('group_type', sa.INTEGER(), server_default=sa.text('147019101'), autoincrement=False, nullable=False),
    sa.Column('wants_mc', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('needs_rehearsal', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('badges_assigned', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name='fk_guest_group_event_id_event', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name='fk_guest_group_group_id_group'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_group'),
    postgresql_ignore_search_path=False
    )
    op.create_table('attraction_notification_reply',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attraction_event_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('attraction_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('notification_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('from_phonenumber', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('to_phonenumber', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('sid', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('received_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('sent_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('body', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_attraction_notification_reply_attendee_id_attendee'),
    sa.ForeignKeyConstraint(['attraction_event_id'], ['attraction_event.id'], name='fk_attraction_notification_reply_attraction_event_id_at_2807'),
    sa.ForeignKeyConstraint(['attraction_id'], ['attraction.id'], name='fk_attraction_notification_reply_attraction_id_attraction'),
    sa.PrimaryKeyConstraint('id', name='pk_attraction_notification_reply')
    )
    op.create_index('ix_attraction_notification_reply_sid', 'attraction_notification_reply', ['sid'], unique=False)
    op.create_table('indie_developer',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('studio_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('primary_contact', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('cellphone', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('agreed_coc', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('agreed_data_policy', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_indie_developer_attendee_id_attendee'),
    sa.ForeignKeyConstraint(['studio_id'], ['indie_studio.id'], name='fk_indie_developer_studio_id_indie_studio'),
    sa.PrimaryKeyConstraint('id', name='pk_indie_developer'),
    sa.UniqueConstraint('attendee_id', name='uq_indie_developer_attendee_id')
    )
    op.create_table('indie_studio',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('group_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('website', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('twitter', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('facebook', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), server_default=sa.text('239694250'), autoincrement=False, nullable=False),
    sa.Column('staff_notes', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('registered', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('accepted_core_hours', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('completed_discussion', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('discussion_emails', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('email_for_hotel', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('name_for_hotel', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('needs_hotel_space', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('read_handbook', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('selling_at_event', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('training_password', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('contact_phone', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('show_info_updated', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name='fk_indie_studio_group_id_group'),
    sa.PrimaryKeyConstraint('id', name='pk_indie_studio'),
    sa.UniqueConstraint('name', name='uq_indie_studio_name'),
    postgresql_ignore_search_path=False
    )
    op.create_table('guest_charity',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('guest_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('donating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('desc', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['guest_id'], ['guest_group.id'], name='fk_guest_charity_guest_id_guest_group'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_charity'),
    sa.UniqueConstraint('guest_id', name='uq_guest_charity_guest_id')
    )
    op.create_table('art_show_receipt',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('invoice_num', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('closed', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_art_show_receipt_attendee_id_attendee', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='pk_art_show_receipt'),
    postgresql_ignore_search_path=False
    )
    op.create_table('mits_times',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('team_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('availability', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('showcase_availability', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['mits_team.id'], name='fk_mits_times_team_id_mits_team'),
    sa.PrimaryKeyConstraint('id', name='pk_mits_times')
    )
    op.create_table('attraction_signup',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attraction_event_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('signup_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('checkin_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('attraction_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_attraction_signup_attendee_id_attendee'),
    sa.ForeignKeyConstraint(['attraction_event_id'], ['attraction_event.id'], name='fk_attraction_signup_attraction_event_id_attraction_event'),
    sa.ForeignKeyConstraint(['attraction_id'], ['attraction.id'], name='fk_attraction_signup_attraction_id_attraction'),
    sa.PrimaryKeyConstraint('id', name='pk_attraction_signup'),
    sa.UniqueConstraint('attraction_event_id', 'attendee_id', name='uq_attraction_signup_attraction_event_id')
    )
    op.create_index('ix_attraction_signup_checkin_time', 'attraction_signup', ['checkin_time'], unique=False)
    op.create_table('art_show_bidder',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('bidder_num', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('hotel_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('hotel_room_num', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('admin_notes', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('signed_up', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('email_won_bids', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_art_show_bidder_attendee_id_attendee', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='pk_art_show_bidder')
    )
    op.create_table('mits_applicant',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('team_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('primary_contact', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('cellphone', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('contact_method', sa.INTEGER(), server_default=sa.text('42059704'), autoincrement=False, nullable=False),
    sa.Column('declined_hotel_space', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('requested_room_nights', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_mits_applicant_attendee_id_attendee'),
    sa.ForeignKeyConstraint(['team_id'], ['mits_team.id'], name='fk_mits_applicant_team_id_mits_team'),
    sa.PrimaryKeyConstraint('id', name='pk_mits_applicant')
    )
    op.create_table('guest_detailed_travel_plan',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('travel_plans_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('mode', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('mode_text', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('traveller', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('companions', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('luggage_needs', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('contact_email', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('contact_phone', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('arrival_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('arrival_details', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('departure_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('departure_details', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('extra_details', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['travel_plans_id'], ['guest_travel_plans.id'], name='fk_guest_detailed_travel_plan_travel_plans_id_guest_tra_6ad4'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_detailed_travel_plan')
    )
    op.create_table('art_show_application',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('artist_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('panels', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('tables', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('special_needs', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), server_default=sa.text('172070601'), autoincrement=False, nullable=False),
    sa.Column('admin_notes', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('overridden_price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('delivery_method', sa.INTEGER(), server_default=sa.text('32373808'), autoincrement=False, nullable=False),
    sa.Column('panels_ad', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('tables_ad', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('artist_id', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('banner_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('check_payable', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('hotel_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('hotel_room_num', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('checked_in', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('checked_out', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('locations', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('address1', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('address2', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('business_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('region', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('zip_code', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('paypal_address', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('us_only', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('default_cost', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('check_in_notes', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('payout_method', sa.INTEGER(), server_default=sa.text('25184922'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('banner_name_ad', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('artist_id_ad', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('contact_at_con', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_art_show_application_attendee_id_attendee', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='pk_art_show_application')
    )
    op.create_table('guest_stage_plot',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('guest_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('content_type', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('notes', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['guest_id'], ['guest_group.id'], name='fk_guest_stage_plot_guest_id_guest_group'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_stage_plot'),
    sa.UniqueConstraint('guest_id', name='uq_guest_stage_plot_guest_id')
    )
    op.create_table('attraction',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('advance_notices', sa.VARCHAR(), server_default=sa.text("'[]'::character varying"), autoincrement=False, nullable=False),
    sa.Column('advance_checkin', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('restriction', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('department_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('owner_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('is_public', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('badge_num_required', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('full_description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], name='fk_attraction_department_id_department'),
    sa.ForeignKeyConstraint(['owner_id'], ['admin_account.id'], name='fk_attraction_owner_id_admin_account'),
    sa.PrimaryKeyConstraint('id', name='pk_attraction'),
    sa.UniqueConstraint('name', name='uq_attraction_name'),
    sa.UniqueConstraint('slug', name='uq_attraction_slug'),
    postgresql_ignore_search_path=False
    )
    op.create_table('guest_taxes',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('guest_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('w9_sent', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['guest_id'], ['guest_group.id'], name='fk_guest_taxes_guest_id_guest_group'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_taxes'),
    sa.UniqueConstraint('guest_id', name='uq_guest_taxes_guest_id')
    )
    op.create_table('panel_applicant',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('app_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('submitter', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('cellphone', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('communication_pref', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('occupation', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('other_communication_pref', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('other_credentials', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('social_media', sa.VARCHAR(), server_default=sa.text("'{}'::character varying"), autoincrement=False, nullable=False),
    sa.Column('website', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('other_pronouns', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('pronouns', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('display_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('guidebook_bio', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['panel_application.id'], name='fk_panel_applicant_app_id_panel_application', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_panel_applicant_attendee_id_attendee', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='pk_panel_applicant')
    )
    op.create_table('art_show_payment',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('receipt_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('type', sa.INTEGER(), server_default=sa.text('180350097'), autoincrement=False, nullable=False),
    sa.Column('when', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['receipt_id'], ['art_show_receipt.id'], name='fk_art_show_payment_receipt_id_art_show_receipt', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='pk_art_show_payment')
    )
    op.create_table('indie_game',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('studio_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('brief_description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('genres', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('how_to_play', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('link_to_video', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('link_to_game', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('password_to_game', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('code_type', sa.INTEGER(), server_default=sa.text('153623436'), autoincrement=False, nullable=False),
    sa.Column('code_instructions', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('build_status', sa.INTEGER(), server_default=sa.text('195530085'), autoincrement=False, nullable=False),
    sa.Column('build_notes', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('shown_events', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('submitted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('agreed_liability', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('agreed_showtimes', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('agreed_reminder1', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('agreed_reminder2', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), server_default=sa.text('239694250'), autoincrement=False, nullable=False),
    sa.Column('judge_notes', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('registered', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('platforms', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('platforms_text', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('alumni_update', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('alumni_years', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('accepted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('waitlisted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('facebook', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('has_multiplayer', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('leaderboard_challenge', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('link_to_promo_video', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('link_to_webpage', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('multiplayer_game_length', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('other_social_media', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('player_count', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('tournament_at_event', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('tournament_prizes', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('twitter', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('is_multiplayer', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('content_warning', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('photosensitive_warning', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('warning_desc', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['studio_id'], ['indie_studio.id'], name='fk_indie_game_studio_id_indie_studio'),
    sa.PrimaryKeyConstraint('id', name='pk_indie_game'),
    postgresql_ignore_search_path=False
    )
    op.create_table('guest_interview',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('guest_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('will_interview', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('direct_contact', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['guest_id'], ['guest_group.id'], name='fk_guest_interview_guest_id_guest_group'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_interview'),
    sa.UniqueConstraint('guest_id', name='uq_guest_interview_guest_id')
    )
    op.create_table('attraction_event',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attraction_feature_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('location', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('duration', sa.INTEGER(), server_default=sa.text('900'), autoincrement=False, nullable=False),
    sa.Column('slots', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('attraction_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('signups_open', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attraction_feature_id'], ['attraction_feature.id'], name='fk_attraction_event_attraction_feature_id_attraction_feature'),
    sa.ForeignKeyConstraint(['attraction_id'], ['attraction.id'], name='fk_attraction_event_attraction_id_attraction'),
    sa.PrimaryKeyConstraint('id', name='pk_attraction_event'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_attraction_event_attraction_id', 'attraction_event', ['attraction_id'], unique=False)
    op.create_table('indie_game_image',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('game_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('content_type', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('extension', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('is_screenshot', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('use_in_promo', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('is_header', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('is_thumbnail', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['indie_game.id'], name='fk_indie_game_image_game_id_indie_game'),
    sa.PrimaryKeyConstraint('id', name='pk_indie_game_image')
    )
    op.create_table('mits_team',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('panel_interest', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('want_to_sell', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('submitted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('applied', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), server_default=sa.text('196944751'), autoincrement=False, nullable=False),
    sa.Column('deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('duplicate_of', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('showcase_interest', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('waiver_signature', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('waiver_signed', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('concurrent_attendees', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('days_available', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hours_available', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_mits_team'),
    postgresql_ignore_search_path=False
    )
    op.create_table('attendee_tournament',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('cellphone', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('game', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('availability', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('format', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('experience', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('needs', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('why', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('volunteering', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), server_default=sa.text('239694250'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_attendee_tournament')
    )
    op.create_table('guest_travel_plans',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('guest_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('modes', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('modes_text', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('details', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('completed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['guest_id'], ['guest_group.id'], name='fk_guest_travel_plans_guest_id_guest_group'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_travel_plans'),
    sa.UniqueConstraint('guest_id', name='uq_guest_travel_plans_guest_id')
    )
    op.create_table('event_feedback',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('event_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('headcount_starting', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('headcount_during', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('comments', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('rating', sa.INTEGER(), server_default=sa.text('54944008'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_event_feedback_attendee_id_attendee', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name='fk_event_feedback_event_id_event'),
    sa.PrimaryKeyConstraint('id', name='pk_event_feedback')
    )
    op.create_table('attraction_notification',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attraction_event_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attraction_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('notification_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ident', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('sid', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('sent_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('body', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_attraction_notification_attendee_id_attendee'),
    sa.ForeignKeyConstraint(['attraction_event_id'], ['attraction_event.id'], name='fk_attraction_notification_attraction_event_id_attraction_event'),
    sa.ForeignKeyConstraint(['attraction_id'], ['attraction.id'], name='fk_attraction_notification_attraction_id_attraction'),
    sa.PrimaryKeyConstraint('id', name='pk_attraction_notification')
    )
    op.create_index('ix_attraction_notification_ident', 'attraction_notification', ['ident'], unique=False)
    op.create_table('indie_game_review',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('game_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('judge_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('video_status', sa.INTEGER(), server_default=sa.text('196944751'), autoincrement=False, nullable=False),
    sa.Column('game_status', sa.INTEGER(), server_default=sa.text('196944751'), autoincrement=False, nullable=False),
    sa.Column('game_review', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('developer_response', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('staff_notes', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('game_content_bad', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('send_to_studio', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('design_score', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('enjoyment_score', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('readiness_score', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('read_how_to_play', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['indie_game.id'], name='fk_indie_game_review_game_id_indie_game'),
    sa.ForeignKeyConstraint(['judge_id'], ['indie_judge.id'], name='fk_indie_game_review_judge_id_indie_judge'),
    sa.PrimaryKeyConstraint('id', name='pk_indie_game_review'),
    sa.UniqueConstraint('game_id', 'judge_id', name='review_game_judge_uniq')
    )
    op.create_table('event',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('location', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('public_description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('track', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_event'),
    postgresql_ignore_search_path=False
    )
    op.create_table('mits_document',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('game_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['mits_game.id'], name='fk_mits_document_game_id_mits_game'),
    sa.PrimaryKeyConstraint('id', name='pk_mits_document')
    )
    op.create_table('mits_panel_application',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('team_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('length', sa.INTEGER(), server_default=sa.text('212285177'), autoincrement=False, nullable=False),
    sa.Column('participation_interest', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['mits_team.id'], name='fk_mits_panel_application_team_id_mits_team'),
    sa.PrimaryKeyConstraint('id', name='pk_mits_panel_application')
    )
    op.create_table('mits_game',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('team_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('promo_blurb', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('genre', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('phase', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('min_age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('min_players', sa.INTEGER(), server_default=sa.text('2'), autoincrement=False, nullable=False),
    sa.Column('max_players', sa.INTEGER(), server_default=sa.text('4'), autoincrement=False, nullable=False),
    sa.Column('personally_own', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('unlicensed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('professional', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('age_explanation', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('copyrighted', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['mits_team.id'], name='fk_mits_game_team_id_mits_team'),
    sa.PrimaryKeyConstraint('id', name='pk_mits_game')
    )
    op.create_table('assigned_panelist',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('attendee_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('event_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attendee_id'], ['attendee.id'], name='fk_assigned_panelist_attendee_id_attendee', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name='fk_assigned_panelist_event_id_event', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='pk_assigned_panelist')
    )
    op.create_table('guest_autograph',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('guest_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('num', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('length', sa.INTEGER(), server_default=sa.text('60'), autoincrement=False, nullable=False),
    sa.Column('rock_island_autographs', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('rock_island_length', sa.INTEGER(), server_default=sa.text('60'), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"), autoincrement=False, nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['guest_id'], ['guest_group.id'], name='fk_guest_autograph_guest_id_guest_group'),
    sa.PrimaryKeyConstraint('id', name='pk_guest_autograph'),
    sa.UniqueConstraint('guest_id', name='uq_guest_autograph_guest_id')
    )
    # ### end Alembic commands ###
